name: Test & Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.5-alpine
        env:
          POSTGRES_USER: dev_user
          POSTGRES_PASSWORD: dev_password
          POSTGRES_DB: omni_test
        options: >-
          --health-cmd="pg_isready -U dev_user -d omni_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm

      - name: Configure environment for onnxruntime-node (CPU only)
        run: |
          echo "ONNXRUNTIME_NODE_PREBUILT=false" >> $GITHUB_ENV
          echo "ONNXRUNTIME_NODE_CPU=true" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Ajustar variÃ¡veis de ambiente para CI
        run: |
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV

      - name: Run migrations
        run: |
          npx dotenvx run -f .env.test -- npx prisma generate
          npx dotenvx run -f .env.test -- npx prisma migrate deploy
        env:
          NODE_ENV: test

      - name: Run tests with coverage (lcov)
        run: npx vitest run --coverage --coverage.reporter=lcov
        env:
          NODE_ENV: test

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Stivan-Lucas/Omni-Chat-Real-Time
          files: ./coverage/lcov.info
          fail_ci_if_error: true
